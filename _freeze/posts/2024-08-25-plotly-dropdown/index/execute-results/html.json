{
  "hash": "3fec54c0060ec72f94e6cd16224317b5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Plotly dropdown box\nauthor: Shaun Nielsen\ndate: '2024-08-25'\ncategories: [plotly,htmlwidget, data visualisation]\nknitr:\n  opts_chunk: \n    fig.align: \"center\"\n---\n\n\n\n\n\nIn this post, we look at using [dropdown events](https://plotly.com/r/dropdowns/) such as dropdown boxes within the plotly R package. The task is a good introduction\nto how R and JavaScript are linked within plotly (and htmlwidgets), and how we\nreplicate data structures between the two languages. Spurred on by helping a friend with this task, I thought I might write a short document on it.\n\n<!--more-->\n\n## Introduction\n\nPlotly is a JavaScript (JS) visualisation library that we can access in R for interactive visualisations - within an R session or embedded in R markdown documents and R Shiny applications. The way it works in R is that we have access to the javascript library using the `plotly` and `htmlwidgets` packages. Basically, the data and plot parameters are captured in R, transformed slightly, and sent into Plotly JS for visualisation.\n\nHere we look at [dropdown events](https://plotly.com/r/dropdowns/) in Plotly\nto create a dropdown menu able to subset the data that is embedded in the Plotly visualization element. This transform action happens within Plotly, and not with other methods e.g. crosstalk.\n\nThe goal:\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](diagram-plan.svg){fig-align='center'}\n:::\n:::\n\n\n\n\n\n## Package required \n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(plotly)\n```\n:::\n\n\n\n\n\n## The data\n\nThe data is contains the number of animals tested (`number_animals`) undergoing different types of tests (`test_type`) for different animals (`animal`) across different years (`years`).\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nanimal_tests <- readr::read_csv('yearly-animal-testing.csv', show_col_types = F)\n\nanimal_tests\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 45 × 4\n    year animal  test_type number_animals\n   <dbl> <chr>   <chr>              <dbl>\n 1  2020 cow     A                      2\n 2  2021 cow     A                      3\n 3  2022 cow     A                      3\n 4  2023 cow     A                      3\n 5  2024 cow     A                      5\n 6  2020 chicken A                      1\n 7  2021 chicken A                      3\n 8  2022 chicken A                      2\n 9  2023 chicken A                      2\n10  2024 chicken A                      6\n# ℹ 35 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\n# 5 years\nanimal_tests |>\n  dplyr::count(year)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 2\n   year     n\n  <dbl> <int>\n1  2020     9\n2  2021     9\n3  2022     9\n4  2023     9\n5  2024     9\n```\n\n\n:::\n\n```{.r .cell-code}\n# 3 animals\nanimal_tests |>\n  dplyr::count(animal)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n  animal      n\n  <chr>   <int>\n1 chicken    15\n2 cow        15\n3 pig        15\n```\n\n\n:::\n\n```{.r .cell-code}\n# 3 test types\nanimal_tests |>\n  dplyr::count(test_type)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 2\n  test_type     n\n  <chr>     <int>\n1 A            15\n2 B            15\n3 C            15\n```\n\n\n:::\n:::\n\n\n\n\n\n## Step by step\n\nWe first simulate what we want to do. We filter the column `animal` equal to `\"cow\"`, and then create a plot. However, in the end we want a dropdown box to do this this filtering step, and to allow us to choose what animal to visualise.\n\nI have included a hovertemplate, as it is useful for troubleshooting and quality control - allowing us to see what data is being plot. **We can fall into a trap where the data and transformations are incorrect, but a visualisation is still produced!**\n\nHoverving over the bars of the following plot, we should see what we have only plot data from cows, with values being the number of animals, the x axes the sampling year and the bars colours the test type.\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nanimal_tests |>\n  dplyr::filter(animal == 'cow') |>\n  plot_ly(x = ~year, y = ~number_animals, color = ~test_type,\n          type = 'bar',\n          text =~animal,\n          hovertemplate = paste0(\n            \"Animal: %{text}<br>\",\n            \"Year: %{x}<br>\",\n            \"Total Animals: %{y}\",\n            \"<extra></extra>\"\n          )\n  )\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-1c51c77f73316aabb743\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-1c51c77f73316aabb743\">{\"x\":{\"visdat\":{\"24af54f96b70a\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"24af54f96b70a\",\"attrs\":{\"24af54f96b70a\":{\"x\":{},\"y\":{},\"text\":{},\"hovertemplate\":\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"color\":{},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"bar\"}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"year\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"number_animals\"},\"hovermode\":\"closest\",\"showlegend\":true},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[2020,2021,2022,2023,2024],\"y\":[2,3,3,3,5],\"text\":[\"cow\",\"cow\",\"cow\",\"cow\",\"cow\"],\"hovertemplate\":[\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\"],\"type\":\"bar\",\"name\":\"A\",\"marker\":{\"color\":\"rgba(102,194,165,1)\",\"line\":{\"color\":\"rgba(102,194,165,1)\"}},\"textfont\":{\"color\":\"rgba(102,194,165,1)\"},\"error_y\":{\"color\":\"rgba(102,194,165,1)\"},\"error_x\":{\"color\":\"rgba(102,194,165,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2020,2021,2022,2023,2024],\"y\":[2,7,4,1,2],\"text\":[\"cow\",\"cow\",\"cow\",\"cow\",\"cow\"],\"hovertemplate\":[\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\"],\"type\":\"bar\",\"name\":\"B\",\"marker\":{\"color\":\"rgba(252,141,98,1)\",\"line\":{\"color\":\"rgba(252,141,98,1)\"}},\"textfont\":{\"color\":\"rgba(252,141,98,1)\"},\"error_y\":{\"color\":\"rgba(252,141,98,1)\"},\"error_x\":{\"color\":\"rgba(252,141,98,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2020,2021,2022,2023,2024],\"y\":[3,5,5,4,5],\"text\":[\"cow\",\"cow\",\"cow\",\"cow\",\"cow\"],\"hovertemplate\":[\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\"],\"type\":\"bar\",\"name\":\"C\",\"marker\":{\"color\":\"rgba(141,160,203,1)\",\"line\":{\"color\":\"rgba(141,160,203,1)\"}},\"textfont\":{\"color\":\"rgba(141,160,203,1)\"},\"error_y\":{\"color\":\"rgba(141,160,203,1)\"},\"error_x\":{\"color\":\"rgba(141,160,203,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n\n## What we need to do\n\nWe need to add these elements to the above plot:\n\n  - a **transforms** element describing how to filter the data: what columns and operation to do\n  - a **button** element with different buttons that sends values to the transforms element\n  \nNote that the *transforms* elements is within the `plot_ly()` call and the buttons live inside the `layout()` call.\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# ... represents other necessary code for the plot\ndata |>\n  plot_ly(...,\n          transforms = '{ transform code }' ) |>\n  layout(...,\n         updatemenus = '{ button code }' )\n```\n:::\n\n\n\n\n\n### A side quest\n\nA difficulty here is how we provide the configuration values to plotly. There is the nesting of elements - lists of lists of lists - which comes from\nJavaScript Object Notation (JSON) in web development (which is the domain Plotly is written in, and also all the Rmarkdown stuff). This is a hierarchical data format, and traditionally how you would pass values into the Plotly JS package to build a plot:\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.js .cell-code}\n// A JSON object\n{\n  name: \"John Smith\",\n  age: 36\n  address = {\n    number: 123\n    street: \"Fake St\"\n    suburb: \"Springfield\"\n  },\n  items = [\n    {\n      item: 'phone',\n      size: 'small'\n    },\n    {\n      item: 'television',\n      size: 'large'\n    }\n  ]\n}\n```\n:::\n\n\n\n\n\nWe can transform it into R code using `list()`. Note how the items element is a list of list elements (or list objects). Sometimes we forget an outer list and this is the reason the code does not work.\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlist(\n  name = \"John Smith\",\n  age = 36,\n  address = list(\n    number: 123,\n    street: \"Fake St\",\n    suburb: \"Springfield\",\n  ),\n  items = list(\n    list(    \n      item ='phone',\n      size = 'small'\n    ),\n    list(\n      item = 'television',\n      size = 'large'\n    )\n  )\n)\n```\n:::\n\n\n\n\n\n### Adding the transforms\n\nWithin the `plot_ly()` call we include the `transforms` parameter, which takes in a \nlist of transform elements (themselves being a list of values). \n\nThere transform element here: \n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlist(  \n  type = 'filter',       # filter function\n  target = data_column,  # target data column to filter\n  operation = '=',       # comparison operation <, >, <=, >=, =   \n  value = default_value  # The value to first filter on\n)\n```\n:::\n\n\n\n\n\nA good practice is to include a title comment to separate code chunks for better visibility\nas well as reminding yourself of the number of transforms you have **starting from 0** (you can have many transforms in you plot).\n\nBelow we are filtering the `animal` column to `=` (equal) values we pass to it (similar to `dplyr::filter(data, animal == 'cow'`)). Notice the output plot is plotting the data with the transform value of 'cow', and we\nare presented with cow data only (use the hover labels to verify).\n\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nanimal_tests |>\n  plot_ly(x = ~year, y = ~number_animals, color = ~test_type,\n          type = 'bar',\n          text =~animal,\n          hovertemplate = paste0(\n            \"Animal: %{text}<br>\",\n            \"Year: %{x}<br>\",\n            \"Total Animals: %{y}\",\n            \"<extra></extra>\"\n          ),\n          transforms = list(\n            # transform 0 \n            list(  \n              type = 'filter',\n              target = ~animal,\n              operation = '=',\n              value = ~unique(animal)[1] # cow\n              # value = 'cow'            # this would also work\n            )\n          )\n  )\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-29a61787273e4a771d92\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-29a61787273e4a771d92\">{\"x\":{\"visdat\":{\"24af549914aeb\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"24af549914aeb\",\"attrs\":{\"24af549914aeb\":{\"x\":{},\"y\":{},\"text\":{},\"hovertemplate\":\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"transforms\":[{\"type\":\"filter\",\"target\":{},\"operation\":\"=\",\"value\":{}}],\"color\":{},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"bar\"}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"year\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"number_animals\"},\"hovermode\":\"closest\",\"showlegend\":true},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[2020,2021,2022,2023,2024,2020,2021,2022,2023,2024,2020,2021,2022,2023,2024],\"y\":[2,3,3,3,5,1,3,2,2,6,2,2,8,2,2],\"text\":[\"cow\",\"cow\",\"cow\",\"cow\",\"cow\",\"chicken\",\"chicken\",\"chicken\",\"chicken\",\"chicken\",\"pig\",\"pig\",\"pig\",\"pig\",\"pig\"],\"hovertemplate\":[\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\"],\"transforms\":[{\"type\":\"filter\",\"target\":[\"cow\",\"cow\",\"cow\",\"cow\",\"cow\",\"chicken\",\"chicken\",\"chicken\",\"chicken\",\"chicken\",\"pig\",\"pig\",\"pig\",\"pig\",\"pig\"],\"operation\":\"=\",\"value\":\"cow\"}],\"type\":\"bar\",\"name\":\"A\",\"marker\":{\"color\":\"rgba(102,194,165,1)\",\"line\":{\"color\":\"rgba(102,194,165,1)\"}},\"textfont\":{\"color\":\"rgba(102,194,165,1)\"},\"error_y\":{\"color\":\"rgba(102,194,165,1)\"},\"error_x\":{\"color\":\"rgba(102,194,165,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2020,2021,2022,2023,2024,2020,2021,2022,2023,2024,2020,2021,2022,2023,2024],\"y\":[2,7,4,1,2,2,6,3,3,2,3,1,2,1,2],\"text\":[\"cow\",\"cow\",\"cow\",\"cow\",\"cow\",\"chicken\",\"chicken\",\"chicken\",\"chicken\",\"chicken\",\"pig\",\"pig\",\"pig\",\"pig\",\"pig\"],\"hovertemplate\":[\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\"],\"transforms\":[{\"type\":\"filter\",\"target\":[\"cow\",\"cow\",\"cow\",\"cow\",\"cow\",\"chicken\",\"chicken\",\"chicken\",\"chicken\",\"chicken\",\"pig\",\"pig\",\"pig\",\"pig\",\"pig\"],\"operation\":\"=\",\"value\":\"cow\"}],\"type\":\"bar\",\"name\":\"B\",\"marker\":{\"color\":\"rgba(252,141,98,1)\",\"line\":{\"color\":\"rgba(252,141,98,1)\"}},\"textfont\":{\"color\":\"rgba(252,141,98,1)\"},\"error_y\":{\"color\":\"rgba(252,141,98,1)\"},\"error_x\":{\"color\":\"rgba(252,141,98,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2020,2021,2022,2023,2024,2020,2021,2022,2023,2024,2020,2021,2022,2023,2024],\"y\":[3,5,5,4,5,3,4,0,5,2,2,1,2,3,2],\"text\":[\"cow\",\"cow\",\"cow\",\"cow\",\"cow\",\"chicken\",\"chicken\",\"chicken\",\"chicken\",\"chicken\",\"pig\",\"pig\",\"pig\",\"pig\",\"pig\"],\"hovertemplate\":[\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\"],\"transforms\":[{\"type\":\"filter\",\"target\":[\"cow\",\"cow\",\"cow\",\"cow\",\"cow\",\"chicken\",\"chicken\",\"chicken\",\"chicken\",\"chicken\",\"pig\",\"pig\",\"pig\",\"pig\",\"pig\"],\"operation\":\"=\",\"value\":\"cow\"}],\"type\":\"bar\",\"name\":\"C\",\"marker\":{\"color\":\"rgba(141,160,203,1)\",\"line\":{\"color\":\"rgba(141,160,203,1)\"}},\"textfont\":{\"color\":\"rgba(141,160,203,1)\"},\"error_y\":{\"color\":\"rgba(141,160,203,1)\"},\"error_x\":{\"color\":\"rgba(141,160,203,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n\n### Adding the buttons\n\nThis part is painful as we need repeat ourselves a lot. We must do it by hand first\nto see how it works, and in the end we will use a function to handle this.\n\nThe dropdown element with buttons:\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlist(\n  type = 'dropdown',              # The type of button element\n  buttons = list(                 # The list of buttons\n    # button 0                    # The first button\n    list(method = \"restyle\",      # Use plotlys restyle method\n         args = list(\n           \"transforms[0].value\", # Update the first transforms value\n           value0                 # With this value\n         ),\n         label = \"Value 0\"        # The label we see on the button\n    ),\n    # button 1\n    list(method = \"restyle\",\n         args = list(\"transforms[0].value;}\", value1),\n         label = \"Value 1\"\n    ),\n    # button n\n    list(method = \"restyle\",\n         args = list(\"transforms[0].value\", valueN),\n         label = 'Value N'\n    )\n  )\n)\n```\n:::\n\n\n\n\n  \nWe add this to a `layout()` call and into the `updatemenus` parameter.\n  \n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nanimal_tests |>\n  plot_ly(x = ~year, y = ~number_animals, color = ~test_type,\n          type = 'bar',\n          text =~animal,\n          hovertemplate = paste0(\n            \"Animal: %{text}<br>\",\n            \"Year: %{x}<br>\",\n            \"Total Animals: %{y}\",\n            \"<extra></extra>\"\n          ),\n          transforms = list(\n            # transform 0 \n            list(  \n              type = 'filter',\n              target = ~animal,\n              operation = '=',\n              value = ~unique(animal)[1]\n            )\n          )\n  ) |>\n  layout(\n    updatemenus = list(\n      # Dropdown 0\n      list(\n        type = 'dropdown',\n        buttons = list(\n          # button 0 = cow\n          list(method = \"restyle\",\n               args = list(\"transforms[0].value\", 'cow'),\n               label = 'Cow'\n          ),\n          # button 1 = chicken\n          list(method = \"restyle\",\n               args = list(\"transforms[0].value\", 'chicken'),\n               label = 'Chicken'\n          ),\n          # button 2 = pig\n          list(method = \"restyle\",\n               args = list(\"transforms[0].value\", 'pig'),\n               label = 'Pig'\n          )\n        )\n      )\n    )\n  )\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-f7dbd08fded28eedba11\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-f7dbd08fded28eedba11\">{\"x\":{\"visdat\":{\"24af551d8ba99\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"24af551d8ba99\",\"attrs\":{\"24af551d8ba99\":{\"x\":{},\"y\":{},\"text\":{},\"hovertemplate\":\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"transforms\":[{\"type\":\"filter\",\"target\":{},\"operation\":\"=\",\"value\":{}}],\"color\":{},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"bar\"}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"updatemenus\":[{\"type\":\"dropdown\",\"buttons\":[{\"method\":\"restyle\",\"args\":[\"transforms[0].value\",\"cow\"],\"label\":\"Cow\"},{\"method\":\"restyle\",\"args\":[\"transforms[0].value\",\"chicken\"],\"label\":\"Chicken\"},{\"method\":\"restyle\",\"args\":[\"transforms[0].value\",\"pig\"],\"label\":\"Pig\"}]}],\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"year\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"number_animals\"},\"hovermode\":\"closest\",\"showlegend\":true},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[2020,2021,2022,2023,2024,2020,2021,2022,2023,2024,2020,2021,2022,2023,2024],\"y\":[2,3,3,3,5,1,3,2,2,6,2,2,8,2,2],\"text\":[\"cow\",\"cow\",\"cow\",\"cow\",\"cow\",\"chicken\",\"chicken\",\"chicken\",\"chicken\",\"chicken\",\"pig\",\"pig\",\"pig\",\"pig\",\"pig\"],\"hovertemplate\":[\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\"],\"transforms\":[{\"type\":\"filter\",\"target\":[\"cow\",\"cow\",\"cow\",\"cow\",\"cow\",\"chicken\",\"chicken\",\"chicken\",\"chicken\",\"chicken\",\"pig\",\"pig\",\"pig\",\"pig\",\"pig\"],\"operation\":\"=\",\"value\":\"cow\"}],\"type\":\"bar\",\"name\":\"A\",\"marker\":{\"color\":\"rgba(102,194,165,1)\",\"line\":{\"color\":\"rgba(102,194,165,1)\"}},\"textfont\":{\"color\":\"rgba(102,194,165,1)\"},\"error_y\":{\"color\":\"rgba(102,194,165,1)\"},\"error_x\":{\"color\":\"rgba(102,194,165,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2020,2021,2022,2023,2024,2020,2021,2022,2023,2024,2020,2021,2022,2023,2024],\"y\":[2,7,4,1,2,2,6,3,3,2,3,1,2,1,2],\"text\":[\"cow\",\"cow\",\"cow\",\"cow\",\"cow\",\"chicken\",\"chicken\",\"chicken\",\"chicken\",\"chicken\",\"pig\",\"pig\",\"pig\",\"pig\",\"pig\"],\"hovertemplate\":[\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\"],\"transforms\":[{\"type\":\"filter\",\"target\":[\"cow\",\"cow\",\"cow\",\"cow\",\"cow\",\"chicken\",\"chicken\",\"chicken\",\"chicken\",\"chicken\",\"pig\",\"pig\",\"pig\",\"pig\",\"pig\"],\"operation\":\"=\",\"value\":\"cow\"}],\"type\":\"bar\",\"name\":\"B\",\"marker\":{\"color\":\"rgba(252,141,98,1)\",\"line\":{\"color\":\"rgba(252,141,98,1)\"}},\"textfont\":{\"color\":\"rgba(252,141,98,1)\"},\"error_y\":{\"color\":\"rgba(252,141,98,1)\"},\"error_x\":{\"color\":\"rgba(252,141,98,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2020,2021,2022,2023,2024,2020,2021,2022,2023,2024,2020,2021,2022,2023,2024],\"y\":[3,5,5,4,5,3,4,0,5,2,2,1,2,3,2],\"text\":[\"cow\",\"cow\",\"cow\",\"cow\",\"cow\",\"chicken\",\"chicken\",\"chicken\",\"chicken\",\"chicken\",\"pig\",\"pig\",\"pig\",\"pig\",\"pig\"],\"hovertemplate\":[\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\"],\"transforms\":[{\"type\":\"filter\",\"target\":[\"cow\",\"cow\",\"cow\",\"cow\",\"cow\",\"chicken\",\"chicken\",\"chicken\",\"chicken\",\"chicken\",\"pig\",\"pig\",\"pig\",\"pig\",\"pig\"],\"operation\":\"=\",\"value\":\"cow\"}],\"type\":\"bar\",\"name\":\"C\",\"marker\":{\"color\":\"rgba(141,160,203,1)\",\"line\":{\"color\":\"rgba(141,160,203,1)\"}},\"textfont\":{\"color\":\"rgba(141,160,203,1)\"},\"error_y\":{\"color\":\"rgba(141,160,203,1)\"},\"error_x\":{\"color\":\"rgba(141,160,203,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n  \n## Improving our workflow\n\nMistakes are easily made in coding, and especially when we need to use repetitive\ncode that has been manually written (as above). We often forget to change values across repeated chunks and they are hard to spot. The solution to avoid errors and making robust code is to use **functions**.\n\nWe will write a function to efficiently make the button list element. We pass it a list of unique values (the unique values of the column we are filtering) and the transform element number, and loop through the values to build the button list elements.\n  \n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n#' Create a plotly button list for use in updatemenus\n#' \n#' Creates a list for use as an item within layout(updatemenus=list(list(buttons = XXX)))\n#' \n#' @param transform_id transform id to link to \n#' @param filter_values unique values to make buttons for\n#' @param label_prefix label prefix\ncreate_transform_buttons <- function(transform_id, filter_values, label_prefix = ''){\n    \n    button_items <- \n      seq_along(filter_values) |>\n      lapply(FUN = function(i){\n        \n        value = filter_values[i]\n        transform_id <- sprintf(\"transforms[%s].value\", transform_id)\n        \n        button_data <-\n          list(method = \"restyle\",\n               args = list(transform_id, value),\n               label = paste(label_prefix, value))\n      })\n\n}\n```\n:::\n\n\n\n\n\nAnd then we use it as follows ... note how much simpler it looks.\n\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nanimal_tests |>\n    plot_ly(x = ~year, y = ~number_animals, color = ~test_type,\n            type = 'bar',\n            text =~animal,\n            hovertemplate = paste0(\n              \"Animal: %{text}<br>\",\n              \"Year: %{x}<br>\",\n              \"Total Animals: %{y}\",\n              \"<extra></extra>\"\n            ),\n            transforms = list(\n              # transform 0 \n              list(  \n                type = 'filter',\n                target = ~animal,\n                operation = '=',\n                value = ~unique(animal)[1]\n              )\n            )\n    ) |>\n    layout(\n      updatemenus = list(\n        # Dropdown 0\n        list(\n          type = 'dropdown',\n          buttons = create_transform_buttons(\n            transform_id = 0,\n            filter_values = unique(animal_tests$animal),\n          )\n        )\n      )\n    )\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-ace5ddcf03e0202af109\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-ace5ddcf03e0202af109\">{\"x\":{\"visdat\":{\"24af529416fb7\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"24af529416fb7\",\"attrs\":{\"24af529416fb7\":{\"x\":{},\"y\":{},\"text\":{},\"hovertemplate\":\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"transforms\":[{\"type\":\"filter\",\"target\":{},\"operation\":\"=\",\"value\":{}}],\"color\":{},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"bar\"}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"updatemenus\":[{\"type\":\"dropdown\",\"buttons\":[{\"method\":\"restyle\",\"args\":[\"transforms[0].value\",\"cow\"],\"label\":\" cow\"},{\"method\":\"restyle\",\"args\":[\"transforms[0].value\",\"chicken\"],\"label\":\" chicken\"},{\"method\":\"restyle\",\"args\":[\"transforms[0].value\",\"pig\"],\"label\":\" pig\"}]}],\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"year\"},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"number_animals\"},\"hovermode\":\"closest\",\"showlegend\":true},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[2020,2021,2022,2023,2024,2020,2021,2022,2023,2024,2020,2021,2022,2023,2024],\"y\":[2,3,3,3,5,1,3,2,2,6,2,2,8,2,2],\"text\":[\"cow\",\"cow\",\"cow\",\"cow\",\"cow\",\"chicken\",\"chicken\",\"chicken\",\"chicken\",\"chicken\",\"pig\",\"pig\",\"pig\",\"pig\",\"pig\"],\"hovertemplate\":[\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\"],\"transforms\":[{\"type\":\"filter\",\"target\":[\"cow\",\"cow\",\"cow\",\"cow\",\"cow\",\"chicken\",\"chicken\",\"chicken\",\"chicken\",\"chicken\",\"pig\",\"pig\",\"pig\",\"pig\",\"pig\"],\"operation\":\"=\",\"value\":\"cow\"}],\"type\":\"bar\",\"name\":\"A\",\"marker\":{\"color\":\"rgba(102,194,165,1)\",\"line\":{\"color\":\"rgba(102,194,165,1)\"}},\"textfont\":{\"color\":\"rgba(102,194,165,1)\"},\"error_y\":{\"color\":\"rgba(102,194,165,1)\"},\"error_x\":{\"color\":\"rgba(102,194,165,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2020,2021,2022,2023,2024,2020,2021,2022,2023,2024,2020,2021,2022,2023,2024],\"y\":[2,7,4,1,2,2,6,3,3,2,3,1,2,1,2],\"text\":[\"cow\",\"cow\",\"cow\",\"cow\",\"cow\",\"chicken\",\"chicken\",\"chicken\",\"chicken\",\"chicken\",\"pig\",\"pig\",\"pig\",\"pig\",\"pig\"],\"hovertemplate\":[\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\"],\"transforms\":[{\"type\":\"filter\",\"target\":[\"cow\",\"cow\",\"cow\",\"cow\",\"cow\",\"chicken\",\"chicken\",\"chicken\",\"chicken\",\"chicken\",\"pig\",\"pig\",\"pig\",\"pig\",\"pig\"],\"operation\":\"=\",\"value\":\"cow\"}],\"type\":\"bar\",\"name\":\"B\",\"marker\":{\"color\":\"rgba(252,141,98,1)\",\"line\":{\"color\":\"rgba(252,141,98,1)\"}},\"textfont\":{\"color\":\"rgba(252,141,98,1)\"},\"error_y\":{\"color\":\"rgba(252,141,98,1)\"},\"error_x\":{\"color\":\"rgba(252,141,98,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null},{\"x\":[2020,2021,2022,2023,2024,2020,2021,2022,2023,2024,2020,2021,2022,2023,2024],\"y\":[3,5,5,4,5,3,4,0,5,2,2,1,2,3,2],\"text\":[\"cow\",\"cow\",\"cow\",\"cow\",\"cow\",\"chicken\",\"chicken\",\"chicken\",\"chicken\",\"chicken\",\"pig\",\"pig\",\"pig\",\"pig\",\"pig\"],\"hovertemplate\":[\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\",\"Animal: %{text}<br>Year: %{x}<br>Total Animals: %{y}<extra><\\/extra>\"],\"transforms\":[{\"type\":\"filter\",\"target\":[\"cow\",\"cow\",\"cow\",\"cow\",\"cow\",\"chicken\",\"chicken\",\"chicken\",\"chicken\",\"chicken\",\"pig\",\"pig\",\"pig\",\"pig\",\"pig\"],\"operation\":\"=\",\"value\":\"cow\"}],\"type\":\"bar\",\"name\":\"C\",\"marker\":{\"color\":\"rgba(141,160,203,1)\",\"line\":{\"color\":\"rgba(141,160,203,1)\"}},\"textfont\":{\"color\":\"rgba(141,160,203,1)\"},\"error_y\":{\"color\":\"rgba(141,160,203,1)\"},\"error_x\":{\"color\":\"rgba(141,160,203,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n\n  \n  \n## Conclusion\n\nWe created a plotly graph in R with a dropdown box that allows the user to select the data they wish to see. We learnt a little bit of how R and JS can be linked and used in plotly. ",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"../../site_libs/plotly-binding-4.10.3/plotly.js\"></script>\n<script src=\"../../site_libs/typedarray-0.1/typedarray.min.js\"></script>\n<script src=\"../../site_libs/jquery-3.5.1/jquery.min.js\"></script>\n<link href=\"../../site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n<link href=\"../../site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}